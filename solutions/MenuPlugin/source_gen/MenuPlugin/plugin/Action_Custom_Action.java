package MenuPlugin.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import javax.swing.JTree;
import com.intellij.openapi.actionSystem.ActionManager;
import com.intellij.openapi.actionSystem.ex.ActionManagerEx;
import com.intellij.ide.DataManager;
import com.intellij.ide.ui.customization.CustomActionsSchema;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class Action_Custom_Action extends BaseAction {
  private static final Icon ICON = null;

  public Action_Custom_Action() {
    super("Repaint", "", ICON);
    this.setIsAlwaysVisible(true);
    this.setExecuteOutsideCommand(false);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    JTree myActionTree = new JTree();
    ActionManager actionManager = ActionManager.getInstance();
    ActionManagerEx actionManagerEx = ActionManagerEx.getInstanceEx();
    DataManager dataManager = DataManager.getInstance();
    CustomActionsSchema customActionsSchema = new CustomActionsSchema();
    customActionsSchema.copyFrom(new CustomActionsSchema());
    DefaultMutableTreeNode defaultMutableTreeNode = new DefaultMutableTreeNode();
    DefaultTreeModel model = new DefaultTreeModel(defaultMutableTreeNode);
    myActionTree.setModel(model);
    ((DefaultTreeModel) myActionTree.getModel()).reload();
  }
}
