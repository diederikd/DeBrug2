package SQL.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import SQL.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.BIGINT:
        return new BIGINT_TextGen();
      case LanguageConceptSwitch.COLUMN:
        return new COLUMN_TextGen();
      case LanguageConceptSwitch.COLUMNDEFINITION:
        return new COLUMNDEFINITION_TextGen();
      case LanguageConceptSwitch.COLUMNReference:
        return new COLUMNReference_TextGen();
      case LanguageConceptSwitch.CREATEPROCEDURE:
        return new CREATEPROCEDURE_TextGen();
      case LanguageConceptSwitch.CREATETABLE:
        return new CREATETABLE_TextGen();
      case LanguageConceptSwitch.DATE:
        return new DATE_TextGen();
      case LanguageConceptSwitch.DATETIME:
        return new DATETIME_TextGen();
      case LanguageConceptSwitch.DDL:
        return new DDL_TextGen();
      case LanguageConceptSwitch.DML:
        return new DML_TextGen();
      case LanguageConceptSwitch.DROPPROCEDURE:
        return new DROPPROCEDURE_TextGen();
      case LanguageConceptSwitch.DROPTABLE:
        return new DROPTABLE_TextGen();
      case LanguageConceptSwitch.ENUM:
        return new ENUM_TextGen();
      case LanguageConceptSwitch.ENUMERATIONVALUE:
        return new ENUMERATIONVALUE_TextGen();
      case LanguageConceptSwitch.INSERT:
        return new INSERT_TextGen();
      case LanguageConceptSwitch.INT:
        return new INT_TextGen();
      case LanguageConceptSwitch.MEDIUMINT:
        return new MEDIUMINT_TextGen();
      case LanguageConceptSwitch.NULL:
        return new NULL_TextGen();
      case LanguageConceptSwitch.PARAMETER:
        return new PARAMETER_TextGen();
      case LanguageConceptSwitch.PARAMETERReference:
        return new PARAMETERReference_TextGen();
      case LanguageConceptSwitch.TIME:
        return new TIME_TextGen();
      case LanguageConceptSwitch.USE:
        return new USE_TextGen();
      case LanguageConceptSwitch.VARCHAR255:
        return new VARCHAR255_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64fL, "SQL.structure.DDL"))) {
        String fname = getFileName_DDL(root);
        String ext = getFileExtension_DDL(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x435274bef862accL, "SQL.structure.DML"))) {
        String fname = getFileName_DML(root);
        String ext = getFileExtension_DML(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), root);
        continue;
      }
    }
  }
  private static String getFileName_DDL(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  private static String getFileName_DML(SNode node) {
    return SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"));
  }
  private static String getFileExtension_DDL(SNode node) {
    return ".ddl";
  }
  private static String getFileExtension_DML(SNode node) {
    return ".sql";
  }
}
