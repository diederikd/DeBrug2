package SQL.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptBIGINT = createDescriptorForBIGINT();
  /*package*/ final ConceptDescriptor myConceptCOLUMN = createDescriptorForCOLUMN();
  /*package*/ final ConceptDescriptor myConceptCOLUMNDEFINITION = createDescriptorForCOLUMNDEFINITION();
  /*package*/ final ConceptDescriptor myConceptCOLUMNReference = createDescriptorForCOLUMNReference();
  /*package*/ final ConceptDescriptor myConceptCREATEPROCEDURE = createDescriptorForCREATEPROCEDURE();
  /*package*/ final ConceptDescriptor myConceptCREATETABLE = createDescriptorForCREATETABLE();
  /*package*/ final ConceptDescriptor myConceptDATATYPE = createDescriptorForDATATYPE();
  /*package*/ final ConceptDescriptor myConceptDATE = createDescriptorForDATE();
  /*package*/ final ConceptDescriptor myConceptDATETIME = createDescriptorForDATETIME();
  /*package*/ final ConceptDescriptor myConceptDDL = createDescriptorForDDL();
  /*package*/ final ConceptDescriptor myConceptDDS = createDescriptorForDDS();
  /*package*/ final ConceptDescriptor myConceptDML = createDescriptorForDML();
  /*package*/ final ConceptDescriptor myConceptDMS = createDescriptorForDMS();
  /*package*/ final ConceptDescriptor myConceptDROPPROCEDURE = createDescriptorForDROPPROCEDURE();
  /*package*/ final ConceptDescriptor myConceptDROPTABLE = createDescriptorForDROPTABLE();
  /*package*/ final ConceptDescriptor myConceptENUM = createDescriptorForENUM();
  /*package*/ final ConceptDescriptor myConceptENUMERATIONVALUE = createDescriptorForENUMERATIONVALUE();
  /*package*/ final ConceptDescriptor myConceptINSERT = createDescriptorForINSERT();
  /*package*/ final ConceptDescriptor myConceptINT = createDescriptorForINT();
  /*package*/ final ConceptDescriptor myConceptMEDIUMINT = createDescriptorForMEDIUMINT();
  /*package*/ final ConceptDescriptor myConceptNULL = createDescriptorForNULL();
  /*package*/ final ConceptDescriptor myConceptPARAMETER = createDescriptorForPARAMETER();
  /*package*/ final ConceptDescriptor myConceptPARAMETERReference = createDescriptorForPARAMETERReference();
  /*package*/ final ConceptDescriptor myConceptSTATEMENT = createDescriptorForSTATEMENT();
  /*package*/ final ConceptDescriptor myConceptTIME = createDescriptorForTIME();
  /*package*/ final ConceptDescriptor myConceptUSE = createDescriptorForUSE();
  /*package*/ final ConceptDescriptor myConceptVALUE = createDescriptorForVALUE();
  /*package*/ final ConceptDescriptor myConceptVARCHAR255 = createDescriptorForVARCHAR255();
  /*package*/ final EnumerationDescriptor myEnumerationPARAMETERIO = new EnumerationDescriptor_PARAMETERIO();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptBIGINT, myConceptCOLUMN, myConceptCOLUMNDEFINITION, myConceptCOLUMNReference, myConceptCREATEPROCEDURE, myConceptCREATETABLE, myConceptDATATYPE, myConceptDATE, myConceptDATETIME, myConceptDDL, myConceptDDS, myConceptDML, myConceptDMS, myConceptDROPPROCEDURE, myConceptDROPTABLE, myConceptENUM, myConceptENUMERATIONVALUE, myConceptINSERT, myConceptINT, myConceptMEDIUMINT, myConceptNULL, myConceptPARAMETER, myConceptPARAMETERReference, myConceptSTATEMENT, myConceptTIME, myConceptUSE, myConceptVALUE, myConceptVARCHAR255);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.BIGINT:
        return myConceptBIGINT;
      case LanguageConceptSwitch.COLUMN:
        return myConceptCOLUMN;
      case LanguageConceptSwitch.COLUMNDEFINITION:
        return myConceptCOLUMNDEFINITION;
      case LanguageConceptSwitch.COLUMNReference:
        return myConceptCOLUMNReference;
      case LanguageConceptSwitch.CREATEPROCEDURE:
        return myConceptCREATEPROCEDURE;
      case LanguageConceptSwitch.CREATETABLE:
        return myConceptCREATETABLE;
      case LanguageConceptSwitch.DATATYPE:
        return myConceptDATATYPE;
      case LanguageConceptSwitch.DATE:
        return myConceptDATE;
      case LanguageConceptSwitch.DATETIME:
        return myConceptDATETIME;
      case LanguageConceptSwitch.DDL:
        return myConceptDDL;
      case LanguageConceptSwitch.DDS:
        return myConceptDDS;
      case LanguageConceptSwitch.DML:
        return myConceptDML;
      case LanguageConceptSwitch.DMS:
        return myConceptDMS;
      case LanguageConceptSwitch.DROPPROCEDURE:
        return myConceptDROPPROCEDURE;
      case LanguageConceptSwitch.DROPTABLE:
        return myConceptDROPTABLE;
      case LanguageConceptSwitch.ENUM:
        return myConceptENUM;
      case LanguageConceptSwitch.ENUMERATIONVALUE:
        return myConceptENUMERATIONVALUE;
      case LanguageConceptSwitch.INSERT:
        return myConceptINSERT;
      case LanguageConceptSwitch.INT:
        return myConceptINT;
      case LanguageConceptSwitch.MEDIUMINT:
        return myConceptMEDIUMINT;
      case LanguageConceptSwitch.NULL:
        return myConceptNULL;
      case LanguageConceptSwitch.PARAMETER:
        return myConceptPARAMETER;
      case LanguageConceptSwitch.PARAMETERReference:
        return myConceptPARAMETERReference;
      case LanguageConceptSwitch.STATEMENT:
        return myConceptSTATEMENT;
      case LanguageConceptSwitch.TIME:
        return myConceptTIME;
      case LanguageConceptSwitch.USE:
        return myConceptUSE;
      case LanguageConceptSwitch.VALUE:
        return myConceptVALUE;
      case LanguageConceptSwitch.VARCHAR255:
        return myConceptVARCHAR255;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationPARAMETERIO);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForBIGINT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "BIGINT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab9900b50eL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804592862478");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCOLUMN() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "COLUMN", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e04L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584250884");
    b.version(2);
    b.aggregate("definition", 0x432375ab987d53baL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e09L).optional(false).ordered(true).multiple(false).origin("4837839804584252346").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCOLUMNDEFINITION() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "COLUMNDEFINITION", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e09L);
    b.class_(false, false, false);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584250889");
    b.version(2);
    b.property("autoincrement", 0x432375ab9900b51eL).type(PrimitiveTypeId.BOOLEAN).origin("4837839804592862494").done();
    b.property("notnull", 0x432375ab9900b521L).type(PrimitiveTypeId.BOOLEAN).origin("4837839804592862497").done();
    b.associate("references", 0x432375ab990ac7a1L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e04L).optional(true).origin("4837839804593522593").done();
    b.aggregate("type", 0x1bdede5178cc4c9fL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L).optional(false).ordered(true).multiple(false).origin("2008286925354192031").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCOLUMNReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "COLUMNReference", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd9132L);
    b.class_(false, false, false);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925354275122");
    b.version(2);
    b.associate("column", 0x1bdede5178cd9133L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e04L).optional(false).origin("2008286925354275123").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCREATEPROCEDURE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "CREATEPROCEDURE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95481L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925353997441");
    b.version(2);
    b.property("comment", 0x1bdede5178e54244L).type(PrimitiveTypeId.STRING).origin("2008286925355827780").done();
    b.aggregate("parameters", 0x1bdede5178c9a008L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95486L).optional(true).ordered(true).multiple(true).origin("2008286925354016776").done();
    b.aggregate("statements", 0x1bdede5178c95484L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95483L).optional(true).ordered(true).multiple(true).origin("2008286925353997444").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCREATETABLE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "CREATETABLE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4dfbL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584250875");
    b.version(2);
    b.property("schema", 0x432375ab987d4dfcL).type(PrimitiveTypeId.STRING).origin("4837839804584250876").done();
    b.property("tablename", 0x432375ab987d4dffL).type(PrimitiveTypeId.STRING).origin("4837839804584250879").done();
    b.aggregate("columns", 0x432375ab987da40fL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e04L).optional(true).ordered(true).multiple(true).origin("4837839804584272911").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDATATYPE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.class_(false, true, false);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925353997449");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDATE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DATE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab98efd71eL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804591757086");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDATETIME() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DATETIME", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab98efd728L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804591757096");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDDL() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DDL", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64fL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584281679");
    b.version(2);
    b.aggregate("statements", 0x432375ab987dc650L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL).optional(true).ordered(true).multiple(true).origin("4837839804584281680").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDDS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.class_(false, true, false);
    b.super_("SQL.structure.STATEMENT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95483L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584281678");
    b.version(2);
    b.alias("Data Definition Statements");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDML() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DML", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x435274bef862accL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/303191757011954380");
    b.version(2);
    b.aggregate("statements", 0x435274bef86be8aL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95482L).optional(true).ordered(true).multiple(true).origin("303191757011992202").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDMS() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DMS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95482L);
    b.class_(false, true, false);
    b.super_("SQL.structure.STATEMENT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95483L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925353997442");
    b.version(2);
    b.alias("Data Manipulation Statements");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDROPPROCEDURE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DROPPROCEDURE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178dea5b9L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925355394489");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDROPTABLE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "DROPTABLE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987e280fL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584306703");
    b.version(2);
    b.property("tablename", 0x432375ab987e2810L).type(PrimitiveTypeId.STRING).origin("4837839804584306704").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForENUM() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "ENUM", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab992dd850L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804595820624");
    b.version(2);
    b.aggregate("values", 0x432375ab992dd858L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab992dd851L).optional(true).ordered(true).multiple(true).origin("4837839804595820632").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForENUMERATIONVALUE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "ENUMERATIONVALUE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab992dd851L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804595820625");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForINSERT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "INSERT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd912dL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DMS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95482L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925354275117");
    b.version(2);
    b.property("tablename", 0x1bdede5178cd91d3L).type(PrimitiveTypeId.STRING).origin("2008286925354275283").done();
    b.aggregate("columns", 0x1bdede5178cd91ccL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd9132L).optional(false).ordered(true).multiple(true).origin("2008286925354275276").done();
    b.aggregate("values", 0x1bdede5178cd91ceL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd912eL).optional(false).ordered(true).multiple(true).origin("2008286925354275278").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForINT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "INT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987d4e08L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584250888");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMEDIUMINT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "MEDIUMINT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab9900b513L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804592862483");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNULL() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "NULL", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cdeff8L);
    b.class_(false, false, false);
    b.super_("SQL.structure.VALUE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd912eL);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925354299384");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPARAMETER() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "PARAMETER", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95486L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925353997446");
    b.version(2);
    b.property("io", 0x1bdede5178c95495L).type(MetaIdFactory.dataTypeId(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c9548cL)).origin("2008286925353997461").done();
    b.aggregate("type", 0x1bdede5178c9548aL).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L).optional(false).ordered(true).multiple(false).origin("2008286925353997450").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPARAMETERReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "PARAMETERReference", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd9138L);
    b.class_(false, false, false);
    b.super_("SQL.structure.VALUE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd912eL);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925354275128");
    b.version(2);
    b.associate("parameter", 0x1bdede5178cd9139L).target(0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95486L).optional(false).origin("2008286925354275129").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSTATEMENT() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "STATEMENT", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95483L);
    b.class_(false, true, false);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925353997443");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTIME() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "TIME", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab98efd71fL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804591757087");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForUSE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "USE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987ee00cL);
    b.class_(false, false, false);
    b.super_("SQL.structure.DDS", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab987dc64eL);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804584353804");
    b.version(2);
    b.property("schemaname", 0x432375ab987ee00dL).type(PrimitiveTypeId.STRING).origin("4837839804584353805").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVALUE() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "VALUE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178cd912eL);
    b.class_(false, true, false);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/2008286925354275118");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVARCHAR255() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SQL", "VARCHAR255", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x432375ab98f81407L);
    b.class_(false, false, false);
    b.super_("SQL.structure.DATATYPE", 0x8941e8e48f174830L, 0xb99182ab0ce69beeL, 0x1bdede5178c95489L);
    b.origin("r:fe7c283b-bef4-4178-9b5f-d85a456a990c(SQL.structure)/4837839804592296967");
    b.version(2);
    return b.create();
  }
}
