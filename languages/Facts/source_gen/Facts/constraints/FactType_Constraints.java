package Facts.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.project.ProjectModelAccess;
import jetbrains.mps.ide.project.ProjectHelper;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.IWhereFilter;
import jetbrains.mps.internal.collections.runtime.IVisitor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class FactType_Constraints extends BaseConstraintsDescriptor {
  public FactType_Constraints() {
    super(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, "Facts.structure.FactType"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0x432375ab97645f1cL, "known"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0x432375ab97645f1cL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "known";
        {
          final SNode factType = (SNode) node;
          if ((SPropertyOperations.getBoolean(propertyValue))) {
            ProjectModelAccess projectModelAccess = new ProjectModelAccess(ProjectHelper.getProject(factType.getModel().getRepository()));
            if (projectModelAccess.canWrite()) {
              projectModelAccess.runWriteAction(new Runnable() {
                public void run() {
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x60a1274b21e189e4L, "Facts.structure.KnownAt"));
                    }
                  }).isEmpty()) {
                    SLinkOperations.addNewChild(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"), MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x60a1274b21e189e4L, "Facts.structure.KnownAt"));
                  }
                }
              });
            }
          }
          if (!((SPropertyOperations.getBoolean(propertyValue)))) {
            ProjectModelAccess projectModelAccess = new ProjectModelAccess(ProjectHelper.getProject(factType.getModel().getRepository()));
            if (projectModelAccess.canWrite()) {
              projectModelAccess.runWriteAction(new Runnable() {
                public void run() {
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x60a1274b21e189e4L, "Facts.structure.KnownAt"));
                    }
                  }).isNotEmpty()) {
                    ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                      public boolean accept(SNode it) {
                        return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x60a1274b21e189e4L, "Facts.structure.KnownAt"));
                      }
                    }).visitAll(new IVisitor<SNode>() {
                      public void visit(SNode it) {
                        SNodeOperations.deleteNode(it);
                      }
                    });
                  }
                }
              });
            }
          }
          return true;
        }
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0x432375ab97172d5eL, "validity"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0x432375ab97172d5eL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "validity";
        {
          final SNode factType = (SNode) node;
          if ((SPropertyOperations.getBoolean(propertyValue))) {
            ProjectModelAccess projectModelAccess = new ProjectModelAccess(ProjectHelper.getProject(factType.getModel().getRepository()));
            if (projectModelAccess.canWrite()) {
              projectModelAccess.runWriteAction(new Runnable() {
                public void run() {
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a4L, "Facts.structure.ValidityFrom"));
                    }
                  }).isEmpty()) {
                    SLinkOperations.addNewChild(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"), MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a4L, "Facts.structure.ValidityFrom"));
                  }
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a8L, "Facts.structure.ValidityTo"));
                    }
                  }).isEmpty()) {
                    SLinkOperations.addNewChild(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"), MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a8L, "Facts.structure.ValidityTo"));
                  }
                }
              });
            }
          }
          if (!((SPropertyOperations.getBoolean(propertyValue)))) {
            ProjectModelAccess projectModelAccess = new ProjectModelAccess(ProjectHelper.getProject(factType.getModel().getRepository()));
            if (projectModelAccess.canWrite()) {
              projectModelAccess.runWriteAction(new Runnable() {
                public void run() {
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a4L, "Facts.structure.ValidityFrom"));
                    }
                  }).isNotEmpty()) {
                    ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                      public boolean accept(SNode it) {
                        return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a4L, "Facts.structure.ValidityFrom"));
                      }
                    }).visitAll(new IVisitor<SNode>() {
                      public void visit(SNode it) {
                        SNodeOperations.deleteNode(it);
                      }
                    });
                  }
                  if (ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                    public boolean accept(SNode it) {
                      return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a8L, "Facts.structure.ValidityTo"));
                    }
                  }).isNotEmpty()) {
                    ListSequence.fromList(SLinkOperations.getChildren(factType, MetaAdapterFactory.getContainmentLink(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f3f32dL, 0xe475eafb2f3f367L, "roles"))).where(new IWhereFilter<SNode>() {
                      public boolean accept(SNode it) {
                        return it.isInstanceOfConcept(MetaAdapterFactory.getConcept(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x1bdede51790b01a8L, "Facts.structure.ValidityTo"));
                      }
                    }).visitAll(new IVisitor<SNode>() {
                      public void visit(SNode it) {
                        SNodeOperations.deleteNode(it);
                      }
                    });
                  }
                }
              });
            }
          }
          return true;
        }
      }
    });
    return properties;
  }
}
