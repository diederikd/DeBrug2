package Facts.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Concept;
  private ConceptPresentation props_DateType;
  private ConceptPresentation props_DateValue;
  private ConceptPresentation props_Entity;
  private ConceptPresentation props_EntityTable;
  private ConceptPresentation props_EntityType;
  private ConceptPresentation props_EntityTypeInRole;
  private ConceptPresentation props_EntityValue;
  private ConceptPresentation props_Fact;
  private ConceptPresentation props_FactBase;
  private ConceptPresentation props_FactModel;
  private ConceptPresentation props_FactTable;
  private ConceptPresentation props_Facttype;
  private ConceptPresentation props_FacttypeReference;
  private ConceptPresentation props_Identifier;
  private ConceptPresentation props_IntegerType;
  private ConceptPresentation props_IntegerValue;
  private ConceptPresentation props_Role;
  private ConceptPresentation props_StringType;
  private ConceptPresentation props_StringValue;
  private ConceptPresentation props_Value;
  private ConceptPresentation props_ValueType;
  private ConceptPresentation props_Variable;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Concept:
        if (props_Concept == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Concept");
          props_Concept = cpb.create();
        }
        return props_Concept;
      case LanguageConceptSwitch.DateType:
        if (props_DateType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_DateType = cpb.create();
        }
        return props_DateType;
      case LanguageConceptSwitch.DateValue:
        if (props_DateValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("DateValue");
          props_DateValue = cpb.create();
        }
        return props_DateValue;
      case LanguageConceptSwitch.Entity:
        if (props_Entity == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Entity = cpb.create();
        }
        return props_Entity;
      case LanguageConceptSwitch.EntityTable:
        if (props_EntityTable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xab4c0de8e6a1380L, 0xab4c0de8e6a1381L, "entitytype", "", "");
          props_EntityTable = cpb.create();
        }
        return props_EntityTable;
      case LanguageConceptSwitch.EntityType:
        if (props_EntityType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_EntityType = cpb.create();
        }
        return props_EntityType;
      case LanguageConceptSwitch.EntityTypeInRole:
        if (props_EntityTypeInRole == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_EntityTypeInRole = cpb.create();
        }
        return props_EntityTypeInRole;
      case LanguageConceptSwitch.EntityValue:
        if (props_EntityValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xab4c0de8e6a1284L, 0xab4c0de8e6a1285L, "value", "", "");
          props_EntityValue = cpb.create();
        }
        return props_EntityValue;
      case LanguageConceptSwitch.Fact:
        if (props_Fact == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f47ca7L, 0xe475eafb2f47ca8L, "facttype", "", "");
          props_Fact = cpb.create();
        }
        return props_Fact;
      case LanguageConceptSwitch.FactBase:
        if (props_FactBase == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_FactBase = cpb.create();
        }
        return props_FactBase;
      case LanguageConceptSwitch.FactModel:
        if (props_FactModel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_FactModel = cpb.create();
        }
        return props_FactModel;
      case LanguageConceptSwitch.FactTable:
        if (props_FactTable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f67893L, 0xe475eafb2f67894L, "facttype", "", "");
          props_FactTable = cpb.create();
        }
        return props_FactTable;
      case LanguageConceptSwitch.Facttype:
        if (props_Facttype == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Facttype = cpb.create();
        }
        return props_Facttype;
      case LanguageConceptSwitch.FacttypeReference:
        if (props_FacttypeReference == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0x7131b251f0ec0054L, 0x7131b251f0ec0055L, "facttype", "", "");
          props_FacttypeReference = cpb.create();
        }
        return props_FacttypeReference;
      case LanguageConceptSwitch.Identifier:
        if (props_Identifier == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Identifier");
          props_Identifier = cpb.create();
        }
        return props_Identifier;
      case LanguageConceptSwitch.IntegerType:
        if (props_IntegerType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_IntegerType = cpb.create();
        }
        return props_IntegerType;
      case LanguageConceptSwitch.IntegerValue:
        if (props_IntegerValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("IntegerValue");
          props_IntegerValue = cpb.create();
        }
        return props_IntegerValue;
      case LanguageConceptSwitch.Role:
        if (props_Role == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Role = cpb.create();
        }
        return props_Role;
      case LanguageConceptSwitch.StringType:
        if (props_StringType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_StringType = cpb.create();
        }
        return props_StringType;
      case LanguageConceptSwitch.StringValue:
        if (props_StringValue == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("StringValue");
          props_StringValue = cpb.create();
        }
        return props_StringValue;
      case LanguageConceptSwitch.Value:
        if (props_Value == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Value = cpb.create();
        }
        return props_Value;
      case LanguageConceptSwitch.ValueType:
        if (props_ValueType == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_ValueType = cpb.create();
        }
        return props_ValueType;
      case LanguageConceptSwitch.Variable:
        if (props_Variable == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0x2aacdfbf487f43acL, 0xa43119468403f2c5L, 0xe475eafb2f47cacL, 0xe475eafb2f47cadL, "role", "", "");
          props_Variable = cpb.create();
        }
        return props_Variable;
    }
    return null;
  }
}
