package Position.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myObligationType__BehaviorDescriptor = new ObligationType__BehaviorDescriptor();
  private final BHDescriptor myImmunityType__BehaviorDescriptor = new ImmunityType__BehaviorDescriptor();
  private final BHDescriptor myPowerType__BehaviorDescriptor = new PowerType__BehaviorDescriptor();
  private final BHDescriptor myActionType__BehaviorDescriptor = new ActionType__BehaviorDescriptor();
  private final BHDescriptor myStateType__BehaviorDescriptor = new StateType__BehaviorDescriptor();
  private final BHDescriptor mySubjectType__BehaviorDescriptor = new SubjectType__BehaviorDescriptor();
  private final BHDescriptor myAbstractEventType__BehaviorDescriptor = new AbstractEventType__BehaviorDescriptor();
  private final BHDescriptor myAction__BehaviorDescriptor = new Action__BehaviorDescriptor();
  private final BHDescriptor myState__BehaviorDescriptor = new State__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt_a0m = concept;
    switch (index_846f5o_a0m.index(cncpt_a0m)) {
      case 0:
        return myAbstractEventType__BehaviorDescriptor;
      case 1:
        return myAction__BehaviorDescriptor;
      case 2:
        return myActionType__BehaviorDescriptor;
      case 3:
        return myImmunityType__BehaviorDescriptor;
      case 4:
        return myObligationType__BehaviorDescriptor;
      case 5:
        return myPowerType__BehaviorDescriptor;
      case 6:
        return myState__BehaviorDescriptor;
      case 7:
        return myStateType__BehaviorDescriptor;
      case 8:
        return mySubjectType__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex index_846f5o_a0m = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x337a9c0102b9418cL), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x5816a80d01b605e4L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x313fc3cd0ceebeb5L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f4ef965L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f3e01d6L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x313fc3cd0cdf2c74L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x7e8caa0ea161570dL), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x337a9c0102b43ef1L), MetaIdFactory.conceptId(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x337a9c0102b667b5L)).seal();
}
