package Position.editor;

/*Generated by MPS */

import jetbrains.mps.editor.runtime.cells.KeyMapImpl;
import jetbrains.mps.openapi.editor.cells.KeyMapAction;
import jetbrains.mps.editor.runtime.cells.KeyMapActionImpl;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;

public class ActionKeymap extends KeyMapImpl {
  public ActionKeymap() {
    this.setApplicableToEveryModel(false);
    KeyMapAction action;
    action = new ActionKeymap.ActionKeymap_Action0();
    this.putAction("any", "VK_ENTER", action);
  }
  public static class ActionKeymap_Action0 extends KeyMapActionImpl {
    public ActionKeymap_Action0() {
      this.setShownInPopupMenu(false);
    }
    public boolean isMenuAlwaysShown() {
      return false;
    }
    public boolean canExecute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      if ((contextCell == null)) {
        return false;
      }
      SNode contextNode = contextCell.getSNode();
      if (contextNode == null) {
        return false;
      }
      return true;
    }
    public void execute(final EditorContext editorContext) {
      EditorCell contextCell = editorContext.getContextCell();
      this.execute_internal(editorContext, contextCell.getSNode(), this.getSelectedNodes(editorContext));
    }
    private void execute_internal(final EditorContext editorContext, final SNode node, final List<SNode> selectedNodes) {
      {
        final SNode powerType = node;
        if (SNodeOperations.isInstanceOf(powerType, MetaAdapterFactory.getConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x313fc3cd0cdf2c74L, "Position.structure.PowerType"))) {
          SNodeFactoryOperations.setNewChild(powerType, MetaAdapterFactory.getContainmentLink(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x313fc3cd0cdf2c74L, 0x313fc3cd0ce0d0e0L, "action"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x33a3a1e24492f50bL, "Position.structure.ISpecificationElement")));
        }
      }
      {
        final SNode obligationType = node;
        if (SNodeOperations.isInstanceOf(obligationType, MetaAdapterFactory.getConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f3e01d6L, "Position.structure.ObligationType"))) {
          SNodeFactoryOperations.setNewChild(obligationType, MetaAdapterFactory.getContainmentLink(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f3e01d6L, 0x2ccf4d5a1f403befL, "action"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x33a3a1e24492f50bL, "Position.structure.ISpecificationElement")));
        }
      }
      {
        final SNode immunityType = node;
        if (SNodeOperations.isInstanceOf(immunityType, MetaAdapterFactory.getConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f4ef965L, "Position.structure.ImmunityType"))) {
          SNodeFactoryOperations.setNewChild(immunityType, MetaAdapterFactory.getContainmentLink(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x2ccf4d5a1f4ef965L, 0x2ccf4d5a1f4f278bL, "action"), SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0x1172cef30f894114L, 0xad0ef59cef2bbaa3L, 0x33a3a1e24492f50bL, "Position.structure.ISpecificationElement")));
        }
      }
    }
    public String getKeyStroke() {
      return " ENTER";
    }
  }
}
