package Position.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum RelationType {
  KAFV("Krachtige aanspraak - fatale verplichting", "KAFV"),
  AIVI("Aanspraak na ingebrekestelling - verplichting na ingebrekestelling", "AIVI"),
  ZAZV("Zwakke aanspraak - zwakke verplichting", "ZAZV"),
  VRGA("Vrijheid â€“ geenaanspraak", "VRGA"),
  VBVG("Verplichte bevoegdheid - verplichte gehoudenheid", "VBVG"),
  OBOG("Optionele bevoegdheid - optionele gehoudenheid", "OBOG"),
  IMGB("Immuniteit - geenbevoegdheid", "IMGB");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private RelationType(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<RelationType> getConstants() {
    List<RelationType> list = ListSequence.fromList(new LinkedList<RelationType>());
    ListSequence.fromList(list).addElement(RelationType.KAFV);
    ListSequence.fromList(list).addElement(RelationType.AIVI);
    ListSequence.fromList(list).addElement(RelationType.ZAZV);
    ListSequence.fromList(list).addElement(RelationType.VRGA);
    ListSequence.fromList(list).addElement(RelationType.VBVG);
    ListSequence.fromList(list).addElement(RelationType.OBOG);
    ListSequence.fromList(list).addElement(RelationType.IMGB);
    return list;
  }
  public static RelationType getDefault() {
    return RelationType.KAFV;
  }
  public static RelationType parseValue(String value) {
    if (value == null) {
      return RelationType.getDefault();
    }
    if (value.equals(RelationType.KAFV.getValueAsString())) {
      return RelationType.KAFV;
    }
    if (value.equals(RelationType.AIVI.getValueAsString())) {
      return RelationType.AIVI;
    }
    if (value.equals(RelationType.ZAZV.getValueAsString())) {
      return RelationType.ZAZV;
    }
    if (value.equals(RelationType.VRGA.getValueAsString())) {
      return RelationType.VRGA;
    }
    if (value.equals(RelationType.VBVG.getValueAsString())) {
      return RelationType.VBVG;
    }
    if (value.equals(RelationType.OBOG.getValueAsString())) {
      return RelationType.OBOG;
    }
    if (value.equals(RelationType.IMGB.getValueAsString())) {
      return RelationType.IMGB;
    }
    return RelationType.getDefault();
  }
}
